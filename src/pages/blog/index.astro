---
import SiteLayout from "../../layouts/BaseLayout.astro";

const builderModel = import.meta.env.BUILDER_BLOGPOST_MODEL;
const builderAPIpublicKey = import.meta.env.BUILDER_API_PUBLIC_KEY;

const response = await fetch(
  `https://cdn.builder.io/api/v3/content/${builderModel}?${new URLSearchParams({
    apiKey: builderAPIpublicKey,
    fields: ["data.slug", "data.title", "data.headerImage", "data.snippet"].join(","),
    cachebust: "true",
  }).toString()}`
)
  .then((res) => res.json())
  .catch((error) => {
    console.error("Error fetching posts:", error);
    return { results: [] }; // Return an empty array in case of an error
  });

const posts: Post[] = response.results || []; // Safely access results

if (!Array.isArray(posts)) {
  console.error("Expected posts to be an array, but got:", posts);
}

const title = "The Blog | ThreadScribe.ai";
const description =
  "Our latest articles on the intersection between consumer experience and generative AI. The ThreadScribe.ai blog.";
---

<SiteLayout title={title} description={description}>
  <div class="container">
    <section class="ts-hero">
      <div class="container">
        <div class="d-flex justify-content-center text-center">
          <div class="col-12 col-lg-10">
            <div class="eyebrow">THREADSCRIBE BLOG</div>
            <h1>
              Latest Articles on<br /><span class="glow">CX & Generative AI</span>
            </h1>
          </div>
        </div>
      </div>
    </section>
    {
      posts.map(({ data: { slug, title, headerImage, snippet } }) => (
        <div class="card mb-3">
          <div class="row g-0">
            <div class="col-md-4">
              <img src={headerImage} class="img-fluid rounded-start" alt="..." />
            </div>
            <div class="col-md-8">
              <div class="card-body">
                <h4 class="card-title">
                  <a href={`/blog/${slug}`} class="stretched-link">
                    {title}
                  </a>
                </h4>
                <p class="card-text">{snippet}</p>
                {/* <p class="card-text">
                  <small class="text-body-secondary">Last updated 3 mins ago</small>
                </p> */}
              </div>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</SiteLayout>
